input_1.addEventListener("change", function () {
  // Check if a file was selected
  if (this.files && this.files.length > 0) {
    // Get the first file in the list of files
    var file = this.files[0];

    const reader = new FileReader();
    reader.onload = function (event) {
      // Read the Excel file and extract the data

      // Create a new instance of the ExcelJS Workbook class

      var workbook = new ExcelJS.Workbook();
      workbook.xlsx.load(reader.result) .then(() => {
        // Use the getWorksheet method to access the worksheets in the workbook
        const worksheet = workbook.getWorksheet('Sheet1');
    
        // Use the eachRow method to iterate through the rows in the worksheet
        worksheet.eachRow(row => {
          // Use the values property to access the cell values in the row
          const values = row.values;
          console.log(values);
        });
      });
    };
    reader.readAsArrayBuffer(file);

    // Read the file data into the workbook
  }
});

// INput 2
input_2.addEventListener("change", function () {
  // Check if a file was selected
  if (this.files && this.files.length > 0) {
    // Get the first file in the list of files
    var file = this.files[0];

    const reader = new FileReader();
    reader.onload = function (event) {
      // Read the Excel file and extract the data

      // Create a new instance of the ExcelJS Workbook class

      var workbook = new ExcelJS.Workbook();
      workbook.xlsx.load(reader.result) .then(() => {
        // Use the getWorksheet method to access the worksheets in the workbook
        const worksheet = workbook.getWorksheet('Sheet1');
    
        // Use the eachRow method to iterate through the rows in the worksheet
        worksheet.eachRow(row => {
          // Use the values property to access the cell values in the row
          const values = row.values;
          console.log(values);
        });
      });
    };
    reader.readAsArrayBuffer(file);

    // Read the file data into the workbook
  }
});










onst exceljs = require('exceljs');

// Create a FileReader object
const reader = new FileReader();

// Read the first Excel file using the 'readAsArrayBuffer' method
reader.readAsArrayBuffer('file1.xlsx');
reader.onload = () => {
  // Create a 'Workbook' object from the array buffer
  const workbook1 = new exceljs.Workbook();
  workbook1.xlsx.load(reader.result).then(() => {
    // Parse the data from the first workbook and store it in variables or arrays
    const data1 = [];
    workbook1.eachSheet((worksheet) => {
      worksheet.eachRow((row) => {
        data1.push(row.values);
      });
    });

    // Read the second Excel file using the 'readAsArrayBuffer' method
    reader.readAsArrayBuffer('file2.xlsx');
    reader.onload = () => {
      // Create a 'Workbook' object from the array buffer
      const workbook2 = new exceljs.Workbook



      const exceljs = require('exceljs');

// Read the contents of the first Excel file using the FileReader API
const fileReader1 = new FileReader();
fileReader1.readAsArrayBuffer('file1.xlsx');
fileReader1.onload = function() {
  // Parse the array buffer and load it into a Workbook object
  const workbook1 = new exceljs.Workbook();
  workbook1.xlsx.load(fileReader1.result).then(() => {
    // Read the contents of the second Excel file using the FileReader API
    const fileReader2 = new FileReader();
    fileReader2.readAsArrayBuffer('file2.xlsx');
    fileReader2.onload = function() {
      // Parse the array buffer and load it into a Workbook object
      const workbook2 = new exceljs.Workbook();
      workbook2.xlsx


      to parse the data from the Excel files and store it in variables or arrays
      workbook1.xlsx.load(firstExcelFile).then(function() {
  workbook2.xlsx.load(secondExcelFile).then(function() {
    //     // Compare the two workbooks using the 'compare' method
    const comparison = workbook1.compare(workbook2);

    // Output the comparison results
    console.log(comparison);
  });
});




 // Get the input element that contains the uploaded files
   
  
    // Get the list of uploaded files
    const input_files_1 = input_1.files;
    const input_files_2 = input_2.files;

    if (input_files_1 && input_files_1.length > 0) {
      // Get the first file in the list of files
      var file1 = input_files_1[0];
  
      const reader = new FileReader();
      reader.onload = function (event) {
        // Read the Excel file and extract the data
        const data = event.target.result;
        // Create a new instance of the ExcelJS Workbook class

  
        // Store the contents of the first Excel file in a variable
    const firstExcelFile = data;


      };
      reader.readAsBinaryString(file1);
    }



    // Check if a file was selected
    if (input_files_2 && input_files_2.length > 0) {
      // Get the first file in the list of files
      var file2 = input_files_2[0];
  
      const reader = new FileReader();
      reader.onload = function (event) {
        // Read the Excel file and extract the data
        const data = event.target.result;
        // Store the contents of the second Excel file in a variable
        const secondExcelFile = data;
        
      };

      reader.readAsBinaryString(file2);
  
      // Read the file data into the workbook


    }

    const workbook1 = new ExcelJS.Workbook();
    const workbook2 = new ExcelJS.Workbook();

    workbook1.xlsx.load(firstExcelFile).then(function() {
      workbook2.xlsx.load(secondExcelFile).then(function() {
        // Compare the two workbooks using the 'compare' method
        const comparison = workbook1.compare(workbook2);
    
        // Output the comparison results
        console.log(comparison);

      });
    });
    

  









  const form = document.getElementById("file-upload__form");

// const submitButton = document.getElementById("btnUpload");

// submitButton.addEventListener("click", () => {
//   // Listen for the 'click' event on the submit button
  
//   form.addEventListener("submit", handleSubmit);
  
//   function handleSubmit(e) {
//   e.preventDefault();


//     // Get the input element that contains the uploaded files
//     const input_files_1 = input_1.files;
//     const input_files_2 = input_2.files;

//     if (input_files_1 && input_files_1.length > 0) {
//       // Get the first file in the list of files
//       var file1 = input_files_1[0];

//       const reader = new FileReader();
//       reader.onload = function (event) {
//         // Read the Excel file and extract the data
//         const data = event.target.result;
//         // Store the contents of the first Excel file in a variable
//         const firstExcelFile = data;
        
//         reader.readAsBinaryString(file1);
        
//         // Create a new instance of the ExcelJS Workbook class
//         const workbook1 = new ExcelJS.Workbook();
//         workbook1.xlsx.load(firstExcelFile).then(function () {
//           // Check if a file was selected
//           if (input_files_2 && input_files_2.length > 0) {
//             // Get the first file in the list of files
//             var file2 = input_files_2[0];

//             const reader = new FileReader();
//             reader.onload = function (event) {
//               // Read the Excel file and extract the data
//               const data = event.target.result;
//               // Store the contents of the second Excel file in a variable
//               const secondExcelFile = data;

//               reader.readAsBinaryString(file2);

//               // Read the file data into the workbook

//               const workbook2 = new ExcelJS.Workbook();

//               workbook2.xlsx.load(secondExcelFile).then(function () {
//                 // Compare the two workbooks using the 'compare' method
//                 const comparison = workbook1.compare(workbook2);

//                 // Output the comparison results
//                 console.log(comparison);
//               });
//             };
//           }
//         });
//       };
//     }
   
// }
// });


// 1. Create a HTML form that allows users to select and upload the two Excel files

// <form id="upload-form">
//   <input type="file" id="file1" accept=".xlsx">
//   <input type="file" id="file2" accept=".xlsx">
//   <button type="submit">Upload Files</button>
// </form>


Upload and compare excel files using file Reader API and Excel JS  const reader = new FileReader();
reader.readAsBinaryString(input_1);
reader.onload = (e) => {
  const binaryData = e.target.result;
  // do something with the binary data
  console.log(binaryData);
}



// // Compare the two workbooks using the 'compare' method
// const comparison = worksheet1.compare(worksheet2);

// // Output the comparison results
// console.log(worksheet1, worksheet2);

                  // Get the cell at the first row and first column
                  const cell1 = worksheet1.getCell('B6');
                  const cell2 = worksheet2.getCell('B6');
                
                  // Use the cell object to access the cell's value, data type, and other properties
                  console.log(cell1.value);
                  console.log(cell1.type);
                  console.log(cell2.value);
                  console.log(cell2.type);









Compare and display resuklts in the console
                
const worksheet2 = workbook2.getWorksheet(1);

                for (let i = 1; i <= worksheet1.rowCount; i++) {
                  for (let j = 1; j <= worksheet1.columnCount; j++) {
                    if (worksheet1.getCell(i, j).value !== worksheet2.getCell(i, j).value) {
                      console.log(`Cell (${i},${j}) does not match: ${worksheet1.getCell(i, j).value} vs ${worksheet2.getCell(i, j).value}`);
                    }
                  }
                }






Excel strram upload files

                
  const workbookWriter = new ExcelJS.stream.xlsx.WorkbookWriter({
                  filename: 'comparison-results.xlsx'
                });
                const worksheet = workbookWriter.addWorksheet('Sheet1');
                
                Object.keys(comparisonResults).forEach(function (cellAddress) {
                  const data = comparisonResults[cellAddress];
                
                  worksheet.addRow([
                    data.firstFileName,
                    data.firstFile,
                    data.secondFileName,
                    data.secondFile
                  ]);
                });
                
                workbookWriter.commit();









const data = {
  name: "John Doe",
  email: "johndoe@example.com",
  phone: "123-456-7890"
};

const workbook = new ExcelJS.Workbook();
const worksheet = workbook.addWorksheet("Sheet1");

worksheet.addRow([data.name, data.email, data.phone]);

workbook.xlsx.writeFile("data.xlsx").then(function() {
  console.log("Excel file saved!");
});


document
                      //   .querySelectorAll(".equal-file-info")
                      //   .forEach(function (element) {
                      //     element.textContent = "These files are equal!";
                      //   });





















for (let i = 1; i <= worksheet1.rowCount; i++) {
                  for (let j = 1; j <= worksheet1.columnCount; j++) {
                    const cellAddress = `${i}${j}`;

                    
                    if (
                      worksheet1.getCell(i, j).value !==
                      worksheet2.getCell(i, j).value
                    ) {
                      comparisonResults[cellAddress] = {
                        firstFileName: input_files_1[0].name,
                        firstFile: `${worksheet1.getCell(i, j).value}`,
                        secondFileName: input_files_2[0].name,
                        secondFile: `${worksheet2.getCell(i, j).value}`,
                      };

                      console.log(comparisonResults[cellAddress]);
                    } else if (
                      worksheet1.getCell(i, j).value ===
                      worksheet2.getCell(i, j).value
                      ) {
                     
                        const equalFileInfoElement = document.querySelector(".equal-file-info");
                        if (equalFileInfoElement) {
                          equalFileInfoElement.innerText = "These files are equal!";
                        }
  
                    }
                  }
                }
                const data_file = comparisonResults[cellAddress];

                // const cellAddress = `${i}${j}`;


                // const data = comparisonResults[cellAddress];

                const workbook = new ExcelJS.Workbook();
                const worksheet = workbook.addWorksheet("Sheet1");

                worksheet.addRow([
                  data_file.firstFileName,
                  data_file.firstFile,
                  data_file.secondFileName,
                  data_file.secondFile,
                ]);

                workbook.xlsx
                  .writeFile("comparison-results.xlsx")
                  .then(function () {
                    console.log("Excel file saved!");
                  });




const workbook = new ExcelJS.Workbook();
const worksheet = workbook.addWorksheet("Sheet1");
for (const cellAddress in comparisonResults) {
  const data = comparisonResults[cellAddress];
  worksheet.addRow([
    data.firstFileName,
    

    const workbook = new ExcelJS.Workbook();
const worksheet = workbook.addWorksheet("Sheet1");
for (const cellAddress in comparisonResults) {
  const data = comparisonResults[cellAddress];
  worksheet.addRow([
    data.firstFileName,
    

    const comparisonResults = {};
for (let i = 1; i <= worksheet1.rowCount; i++) {
  for (let j = 1; j <= worksheet2.columnCount; j++) {
    const cellAddress = `${i}${j}`;
    if (
      worksheet1.getCell(i, j).value !==
      worksheet2.getCell(i, j).value
    ) {
      comparisonResults[cellAddress] = {
        firstFileName: input_files_1[0].name,
        firstFile: `${worksheet1.getCell(i, j).value}`,
        secondFileName: input_files_2[0].name,
        secondFile: `${worksheet2.getCell(i, j).value}`,
      };
    }
  }
}

if (Object.keys(comparisonResults).length === 0) {
  const equalFileInfoElement = document.querySelector(".equal-file-info");
  if (equalFileInfoElement) {
    equalFileInfoElement.textContent = "These files are equal!";
  }
}
